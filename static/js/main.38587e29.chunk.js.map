{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/App.module.css","components/Spinner/Spinner.styled.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","redux/actions.js","redux/operations.js","redux/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Spinner/Spinner.jsx","components/App.jsx","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","changeFilter","createAction","fecthContactsRequest","fecthContactsSuccess","fecthContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","setError","resetError","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","normalizedFilter","toLowerCase","item","name","includes","ContactForm","number","handleChange","event","setState","target","value","handleSubmit","preventDefault","console","log","oldContactName","props","find","contact","oldContactNumber","alert","onSubmit","this","className","styles","contactForm","htmlFor","label","type","contactInput","placeholder","onChange","btn","Component","mapDispatchToProps","dispatch","a","post","data","connect","ContactListItem","id","handleRemove","contactListItem","onClick","btnRemove","delete","map","inputFilter","Spinner","spinner","visible","color","height","width","timeout","App","fecthContacts","container","length","get","createReducer","_","payload","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38587e29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnRemove\":\"ContactListItem_btnRemove__vI47a\",\"contactListItem\":\"ContactListItem_contactListItem__6xll8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__5zHWT\",\"inputFilter\":\"Filter_inputFilter__36ipA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__AM9cm\",\"root\":\"App_root__3M1NW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_styled_spinner__2Emdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__1Ex5m\",\"message\":\"ContactsList_message__21Puv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2TGjH\",\"label\":\"ContactForm_label__2fTAN\",\"contactInput\":\"ContactForm_contactInput__1vgDh\",\"btn\":\"ContactForm_btn__2LwkK\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst removeContact = createAction(\"contacts/remove-contact\");\r\nconst changeFilter = createAction(\"contacts/change-filter\");\r\n\r\n// fecth contacts from data-base\r\nconst fecthContactsRequest = createAction(\"contacts/fecth-contacts\");\r\nconst fecthContactsSuccess = createAction(\"contacts/fecth-contacts-success\");\r\nconst fecthContactsError = createAction(\"contacts/fecth-contacts-failure\");\r\n//add new contact\r\nconst addContactRequest = createAction(\"contacts/add-contacts\");\r\nconst addContactSuccess = createAction(\"contacts/add-contacts-success\");\r\nconst addContactError = createAction(\"contacts/add-contacts-failure\");\r\n// remove contact\r\nconst removeContactRequest = createAction(\"contacts/delete-contact-request\");\r\nconst removeContactSuccess = createAction(\"contacts/delete-contact-success\");\r\nconst removeContactError = createAction(\"contacts/delete-contact-error\");\r\n// errors\r\n\r\nconst setError = createAction(\"contacts/setError\");\r\nconst resetError = createAction(\"contacts/resetError\");\r\n\r\nexport {\r\n  changeFilter,\r\n  removeContact,\r\n  fecthContactsRequest,\r\n  fecthContactsSuccess,\r\n  fecthContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  setError,\r\n  resetError,\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fecthContactsError,\r\n  fecthContactsRequest,\r\n  fecthContactsSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nconst fecthContacts = () => async (dispatch) => {\r\n  dispatch(fecthContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    console.log(data);\r\n    dispatch(fecthContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fecthContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  console.log(contact);\r\n\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    console.log(data);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst removeContact = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error));\r\n  }\r\n};\r\n\r\nexport { fecthContacts, removeContact, addContact };\r\n","const getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter((item) =>\r\n    item.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nexport { getContacts, getFilter, getVisibleContacts, getLoading };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/operations\";\r\nimport { getContacts } from \"../../redux/contacts-selectors\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.name, this.state.number);\r\n\r\n    const oldContactName = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const oldContactNumber = this.props.contacts.find(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (oldContactName) {\r\n      alert(\r\n        `This contact NAME already exists\r\n         as Name:${oldContactName.name} Tel:${oldContactName.number}`\r\n      );\r\n      return;\r\n    } else if (oldContactNumber) {\r\n      alert(\r\n        `This contact NUMBER already exists as\r\n         Tel:${oldContactNumber.number} Name:${oldContactNumber.name}`\r\n      );\r\n      return;\r\n    } else if (!this.state.name) {\r\n      alert(\"Please, enter the contact name\");\r\n      return;\r\n    } else if (!this.state.number) {\r\n      alert(\"Please, enter the contact number\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"name\" className={styles.label}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            placeholder=\"insert name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\" className={styles.label}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            className={styles.contactInput}\r\n            placeholder=\"insert number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: addContact,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\n\r\n\r\nconst ContactListItem = ({ id, name, number, handleRemove }) => {\r\n  \r\n  \r\n    return (\r\n        <li className={styles.contactListItem}>\r\n            <span className=\"contactName\">{name}</span> \r\n            <span className=\"contactNumber\"> {number}</span>\r\n             <button onClick={() =>\r\n               handleRemove(id)}\r\n               className={styles.btnRemove}>Delete</button>\r\n      </li>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem;\r\n","import { uuid } from \"uuidv4\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport { removeContact } from \"../../redux/operations\";\r\n\r\nconst ContactsList = ({ contacts, handleRemove }) => {\r\n  // if (!contacts.length) {\r\n  //   return <p className={styles.message}>Phonebook is empty!</p>;\r\n  // }\r\n  return (\r\n    <ul className=\"contactsList\">\r\n      {contacts.map(({ name, number, id }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          handleRemove={handleRemove}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleRemove: removeContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  visibleContacts: PropTypes.array.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/actions\";\r\nimport { getFilter } from \"../../redux/contacts-selectors\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.inputFilter}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"search contact\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (event) => dispatch(changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from \"./Spinner.styled.module.css\";\r\n\r\nconst Spinner = ({ loading }) => {\r\n  return (\r\n    <Loader\r\n      className={styles.spinner}\r\n      visible={loading}\r\n      type=\"ThreeDots\"\r\n      color=\"white\"\r\n      height={80}\r\n      width={80}\r\n      timeout={1800}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./ContactForm\";\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from \"./App.module.css\";\nimport { fecthContacts } from \"../redux/operations\";\n\nimport { getVisibleContacts, getLoading } from \"../redux/contacts-selectors\";\n\nimport Spinner from \"./Spinner/Spinner\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fecthContacts();\n  }\n\n  render() {\n    const { contacts, loading } = this.props;\n    return (\n      <>\n        <div className={styles.container}>\n          <h1 className=\"titlePhonebook\">Phonebook</h1>\n          <ContactForm />\n          <h2 className=\"title\">Contacts list</h2>\n          {!!contacts.length && <Filter />}\n          <ContactsList contacts={this.props.contacts} />\n          <Spinner loading={loading} />\n          {/* {!contacts.length && (\n            <p className={styles.message}>Phonebook is empty!</p>\n          )} */}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: getVisibleContacts(state),\n    loading: getLoading(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  fecthContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  changeFilter,\r\n  removeContact,\r\n  fecthContactsRequest,\r\n  fecthContactsSuccess,\r\n  fecthContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  setError,\r\n  resetError,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fecthContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fecthContactsRequest]: () => true,\r\n  [fecthContactsSuccess]: () => false,\r\n  [fecthContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nimport contactsReducer from \"./reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}